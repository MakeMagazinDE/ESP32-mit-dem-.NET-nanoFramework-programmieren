<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnitsNet.ElectricResistance</name>
    </assembly>
    <members>
        <member name="T:UnitsNet.ElectricResistance">
            <inheritdoc />
            <summary>
                The electrical resistance of an electrical conductor is the opposition to the passage of an electric current through that conductor.
            </summary>
        </member>
        <member name="F:UnitsNet.ElectricResistance._value">
            <summary>
                The numeric value this quantity was constructed with.
            </summary>
        </member>
        <member name="F:UnitsNet.ElectricResistance._unit">
            <summary>
                The unit this quantity was constructed with.
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Value">
            <summary>
                The numeric value this quantity was constructed with.
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Unit">
            <inheritdoc />
        </member>
        <member name="M:UnitsNet.ElectricResistance.#ctor(System.Double,UnitsNet.Units.ElectricResistanceUnit)">
            <summary>
                Creates the quantity with the given numeric value and unit.
            </summary>
            <param name="value">The numeric value to construct this quantity with.</param>
            <param name="unit">The unit representation to construct this quantity with.</param>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="P:UnitsNet.ElectricResistance.BaseUnit">
            <summary>
                The base unit of Duration, which is Second. All conversions go via this value.
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.MaxValue">
            <summary>
            Represents the largest possible value of Duration
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.MinValue">
            <summary>
            Represents the smallest possible value of Duration
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Zero">
            <summary>
                Gets an instance of this quantity with a value of 0 in the base unit Second.
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Gigaohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Gigaohm"/>
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Kiloohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Kiloohm"/>
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Megaohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Megaohm"/>
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Microohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Microohm"/>
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Milliohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Milliohm"/>
            </summary>
        </member>
        <member name="P:UnitsNet.ElectricResistance.Ohms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Ohm"/>
            </summary>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromGigaohms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Gigaohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromKiloohms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Kiloohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromMegaohms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Megaohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromMicroohms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Microohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromMilliohms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Milliohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.FromOhms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.ElectricResistance"/> from <see cref="F:UnitsNet.Units.ElectricResistanceUnit.Ohm"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.ElectricResistance.From(System.Double,UnitsNet.Units.ElectricResistanceUnit)">
            <summary>
                Dynamically convert from value and unit enum <see cref="T:UnitsNet.Units.ElectricResistanceUnit" /> to <see cref="T:UnitsNet.ElectricResistance" />.
            </summary>
            <param name="value">Value to convert from.</param>
            <param name="fromUnit">Unit to convert from.</param>
            <returns>ElectricResistance unit value.</returns>
        </member>
        <member name="M:UnitsNet.ElectricResistance.As(UnitsNet.Units.ElectricResistanceUnit)">
            <summary>
                Convert to the unit representation <paramref name="unit" />.
            </summary>
            <returns>Value converted to the specified unit.</returns>
        </member>
        <member name="M:UnitsNet.ElectricResistance.ToUnit(UnitsNet.Units.ElectricResistanceUnit)">
            <summary>
                Converts this Duration to another Duration with the unit representation <paramref name="unit" />.
            </summary>
            <returns>A Duration with the specified unit.</returns>
        </member>
        <member name="M:UnitsNet.ElectricResistance.GetValueInBaseUnit">
            <summary>
                Converts the current value + unit to the base unit.
                This is typically the first step in converting from one unit to another.
            </summary>
            <returns>The value in the base unit representation.</returns>
        </member>
    </members>
</doc>
